From 134040cc484248965b730a4eab70439917f50808 Mon Sep 17 00:00:00 2001
From: Olivier Brunel <jjk@jjacky.com>
Date: Sat, 3 Jun 2017 22:10:37 +0200
Subject: [PATCH 09/14] prefs: add option "Ignore sort direction / Make sort
 order aware"

When enabled, we get the old/classic claws behavior, where first means
last, next means previous & previous means last if sorted descending.

When disabled, things make sense. :)

It affects default selection when opening folder, go to previous/next
{,unread,marked,etc} message and next_on_delete behavior.
---
 src/prefs_common.c       |   3 +
 src/prefs_common.h       |   2 +
 src/prefs_summaries.c    |  15 +++++
 src/prefs_summary_open.c |  27 ++++++--
 src/summaryview.c        | 164 +++++++++++++++++++++++++----------------------
 5 files changed, 128 insertions(+), 83 deletions(-)

diff --git a/src/prefs_common.c b/src/prefs_common.c
index c7dc37c13..33b8d843b 100644
--- a/src/prefs_common.c
+++ b/src/prefs_common.c
@@ -799,6 +799,9 @@ static PrefParam param[] = {
 #endif
 	/* {"emulate_emacs", "FALSE", &prefs_common.emulate_emacs, P_BOOL,
 	 NULL, NULL, NULL}, */
+	{"ignore_sort_direction", "FALSE",
+	 &prefs_common.ignore_sort_direction,
+	 P_BOOL, NULL, NULL, NULL},
 	{"open_selected_message_on_folder_open", "FALSE",
 	 &prefs_common.open_selected_on_folder_open,
 	 P_BOOL, NULL, NULL, NULL},
diff --git a/src/prefs_common.h b/src/prefs_common.h
index d53db9a25..cc22713a1 100644
--- a/src/prefs_common.h
+++ b/src/prefs_common.h
@@ -386,6 +386,8 @@ struct _PrefsCommon
 	gint statusbar_update_step;
 	gboolean emulate_emacs;
 
+	gboolean ignore_sort_direction;
+
 	gboolean open_selected_on_folder_open;
 	gboolean open_selected_on_search_results;
 	gboolean open_selected_on_prevnext;
diff --git a/src/prefs_summaries.c b/src/prefs_summaries.c
index 500137f7e..d3967f8e9 100644
--- a/src/prefs_summaries.c
+++ b/src/prefs_summaries.c
@@ -64,6 +64,7 @@ typedef struct _SummariesPage
 	GtkWidget *entry_datefmt;
 
 	GtkWidget *checkbtn_reopen_last_folder;
+	GtkWidget *checkbtn_ignore_sort_direction;
 	GtkWidget *checkbtn_always_show_msg;
 	GtkWidget *checkbtn_show_on_folder_open;
 	GtkWidget *checkbtn_show_on_search_results;
@@ -335,6 +336,7 @@ static void prefs_summaries_create_widget(PrefsPage *_page, GtkWindow *window,
 	GtkWidget *hbox_dispitem;
 	GtkWidget *button_dispitem;
 	GtkWidget *checkbtn_reopen_last_folder;
+	GtkWidget *checkbtn_ignore_sort_direction;
 	GtkWidget *checkbtn_always_show_msg;
 	GtkWidget *checkbtn_show_on_folder_open;
 	GtkWidget *checkbtn_show_on_search_results;
@@ -476,6 +478,13 @@ static void prefs_summaries_create_widget(PrefsPage *_page, GtkWindow *window,
 			  G_CALLBACK (prefs_summary_open_open),
 			  NULL);
 
+	PACK_CHECK_BUTTON
+		(vbox2, checkbtn_ignore_sort_direction,
+		 _("Ignore sort direction / Make sort order aware"));
+	gtk_widget_set_tooltip_text (checkbtn_ignore_sort_direction,
+		_("When enabled, certain features (default selection when entering folder, go to previous/next features, etc) "
+			"will work in reverse when sorted descending: first becomes last, go next becomes go previous, etc"));
+
 	/* Next Unread Message Dialog */
 	hbox1 = gtk_hbox_new (FALSE, 10);
 	gtk_widget_show (hbox1);
@@ -622,6 +631,7 @@ static void prefs_summaries_create_widget(PrefsPage *_page, GtkWindow *window,
 	prefs_summaries->checkbtn_threadsubj = checkbtn_threadsubj;
 	prefs_summaries->entry_datefmt = entry_datefmt;
 	prefs_summaries->checkbtn_reopen_last_folder = checkbtn_reopen_last_folder;
+	prefs_summaries->checkbtn_ignore_sort_direction = checkbtn_ignore_sort_direction;
 
 	prefs_summaries->checkbtn_always_show_msg = checkbtn_always_show_msg;
 	prefs_summaries->checkbtn_show_on_folder_open = checkbtn_show_on_folder_open;
@@ -665,6 +675,8 @@ static void prefs_summaries_create_widget(PrefsPage *_page, GtkWindow *window,
 			prefs_common.date_format?prefs_common.date_format:"");	
 	gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(checkbtn_reopen_last_folder),
 			prefs_common.goto_last_folder_on_startup);
+	gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(checkbtn_ignore_sort_direction),
+			prefs_common.ignore_sort_direction);
 
 	gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(checkbtn_always_show_msg),
 			prefs_common.always_show_msg);
@@ -726,6 +738,9 @@ static void prefs_summaries_save(PrefsPage *_page)
 	prefs_common.goto_last_folder_on_startup = gtk_toggle_button_get_active(
 		GTK_TOGGLE_BUTTON(page->checkbtn_reopen_last_folder));
 
+	prefs_common.ignore_sort_direction = gtk_toggle_button_get_active(
+		GTK_TOGGLE_BUTTON(page->checkbtn_ignore_sort_direction));
+
 	prefs_common.always_show_msg = gtk_toggle_button_get_active(
 		GTK_TOGGLE_BUTTON(page->checkbtn_always_show_msg));
 	prefs_common.open_selected_on_folder_open = gtk_toggle_button_get_active(
diff --git a/src/prefs_summary_open.c b/src/prefs_summary_open.c
index 9331e456a..7bb86dc75 100644
--- a/src/prefs_summary_open.c
+++ b/src/prefs_summary_open.c
@@ -104,7 +104,7 @@ static void drag_end	(GtkTreeView *list_view,
 
 static EntryAction saved_summary_select_prio[SUMMARY_OPEN_ACTIONS-1];
 
-static gchar *action_name[SUMMARY_OPEN_ACTIONS] = 
+static gchar *action_name[SUMMARY_OPEN_ACTIONS*2] = 
 {	  ("UNSET (!)"),
 	 N_("oldest marked email"),
 	 N_("oldest new email"),
@@ -115,7 +115,19 @@ static gchar *action_name[SUMMARY_OPEN_ACTIONS] =
 	 N_("oldest email in the list"),
 	 N_("newest marked email"),
 	 N_("newest new email"),
-	 N_("newest unread email")
+	 N_("newest unread email"),
+	 /* when not "sort order aware" */
+	  ("UNSET (!)"),
+	 N_("first marked email"),
+	 N_("first new email"),
+	 N_("first unread email"),
+	 N_("last opened email"),
+	 N_("last email in the list"),
+	 N_("none"),
+	 N_("first email in the list"),
+	 N_("last marked email"),
+	 N_("last new email"),
+	 N_("last unread email")
 };
 
 void prefs_summary_open_open(void)
@@ -351,6 +363,7 @@ static void prefs_summary_open_set_dialog(void)
 	GtkTreeView *actions_list_view = GTK_TREE_VIEW(summaryopen.actions_list_view);
 	GtkTreeModel *model_poss, *model_act;
 	int i;
+	int offset = (prefs_common.ignore_sort_direction) ? 0 : SUMMARY_OPEN_ACTIONS;
 	gboolean set = FALSE;
 	gboolean used[SUMMARY_OPEN_ACTIONS-1] = {FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE};
 
@@ -370,7 +383,7 @@ fill:
 		set = TRUE;
 		used[act-1] = TRUE;
 		prefs_summary_open_insert_action(GTK_LIST_STORE
-					(model_act), action_name[act], act);	
+					(model_act), action_name[offset+act], act);	
 	}
 	if (!set) {
 		/* backward compat */
@@ -381,7 +394,7 @@ fill:
 	for (i = 1; i < SUMMARY_OPEN_ACTIONS; i++) {
 		if (!used[i-1]) {
 			prefs_summary_open_insert_action(GTK_LIST_STORE
-					(model_poss), action_name[i], i);	
+					(model_poss), action_name[offset+i], i);	
 		}
 	}
 }
@@ -414,6 +427,7 @@ static void prefs_summary_open_delete_cb(GtkButton *btn, gpointer list_view_data
 	GtkTreeView *possible_list_view = GTK_TREE_VIEW(summaryopen.possible_actions_list_view);
 	GtkTreeModel *model, *model_poss;
 	gint i;
+	int offset = (prefs_common.ignore_sort_direction) ? 0 : SUMMARY_OPEN_ACTIONS;
 
 	model = gtk_tree_view_get_model(list_view);
 	model_poss = gtk_tree_view_get_model(possible_list_view);
@@ -429,7 +443,7 @@ static void prefs_summary_open_delete_cb(GtkButton *btn, gpointer list_view_data
 
 	i = GPOINTER_TO_INT(data);
 	prefs_summary_open_insert_action(GTK_LIST_STORE
-					(model_poss), action_name[i], i);	
+					(model_poss), action_name[offset+i], i);	
 	
 	prefs_summary_open_set_list();
 }
@@ -444,6 +458,7 @@ static void prefs_summary_open_register_cb(GtkButton *btn, gpointer list_view_da
 	GtkTreeIter iter;
 	GtkTreeModel *model, *model_poss;
 	gint i;
+	int offset = (prefs_common.ignore_sort_direction) ? 0 : SUMMARY_OPEN_ACTIONS;
 
 	model = gtk_tree_view_get_model(list_view);
 	model_poss = gtk_tree_view_get_model(possible_list_view);
@@ -459,7 +474,7 @@ static void prefs_summary_open_register_cb(GtkButton *btn, gpointer list_view_da
 
 	i = GPOINTER_TO_INT(data);
 	prefs_summary_open_insert_action(GTK_LIST_STORE
-					(model), action_name[i], i);	
+					(model), action_name[offset+i], i);	
 	
 	prefs_summary_open_set_list();
 }
diff --git a/src/summaryview.c b/src/summaryview.c
index a29984e0a..0331fbbde 100644
--- a/src/summaryview.c
+++ b/src/summaryview.c
@@ -1479,7 +1479,8 @@ gboolean summary_show(SummaryView *summaryview, FolderItem *item)
 				if (node == NULL && GTK_CMCLIST(ctree)->row_list != NULL)
 					node = gtk_cmctree_node_nth
 						(ctree,
-						 item->sort_type == SORT_DESCENDING
+						 prefs_common.ignore_sort_direction
+						 && item->sort_type == SORT_DESCENDING
 						 ? 0 : GTK_CMCLIST(ctree)->rows - 1);
 				summary_unlock(summaryview);
 
@@ -1497,7 +1498,8 @@ gboolean summary_show(SummaryView *summaryview, FolderItem *item)
 			if (GTK_CMCLIST(ctree)->row_list != NULL)
 				node = gtk_cmctree_node_nth
 					(ctree,
-					 item->sort_type == SORT_DESCENDING
+					 prefs_common.ignore_sort_direction
+					 && item->sort_type == SORT_DESCENDING
 					 ? 0 : GTK_CMCLIST(ctree)->rows - 1);
 			summary_select_node(summaryview, node, OPEN_SELECTED_ON_SEARCH_RESULTS);
 		}
@@ -1521,51 +1523,57 @@ gboolean summary_show(SummaryView *summaryview, FolderItem *item)
 			
 			switch(act) {
 			case ACTION_OLDEST_MARKED:
-				if (summaryview->sort_type == SORT_ASCENDING)
-					node = summary_find_next_flagged_msg(summaryview, NULL,
+				if (prefs_common.ignore_sort_direction
+					&& item->sort_type == SORT_DESCENDING)
+					node = summary_find_prev_flagged_msg(summaryview, NULL,
 					     MSG_MARKED, FALSE);
 				else
-					node = summary_find_prev_flagged_msg(summaryview, NULL,
+					node = summary_find_next_flagged_msg(summaryview, NULL,
 					     MSG_MARKED, FALSE);
 				break;
 			case ACTION_NEWEST_MARKED:
-				if (summaryview->sort_type == SORT_ASCENDING)
-					node = summary_find_prev_flagged_msg(summaryview, NULL,
+				if (prefs_common.ignore_sort_direction
+					&& item->sort_type == SORT_DESCENDING)
+					node = summary_find_next_flagged_msg(summaryview, NULL,
 					     MSG_MARKED, FALSE);
 				else
-					node = summary_find_next_flagged_msg(summaryview, NULL,
+					node = summary_find_prev_flagged_msg(summaryview, NULL,
 					     MSG_MARKED, FALSE);
 				break;
 			case ACTION_OLDEST_NEW:
-				if (summaryview->sort_type == SORT_ASCENDING)
-					node = summary_find_next_flagged_msg(summaryview, NULL,
+				if (prefs_common.ignore_sort_direction
+					&& item->sort_type == SORT_DESCENDING)
+					node = summary_find_prev_flagged_msg(summaryview, NULL,
 					     MSG_NEW, FALSE);
 				else
-					node = summary_find_prev_flagged_msg(summaryview, NULL,
+					node = summary_find_next_flagged_msg(summaryview, NULL,
 					     MSG_NEW, FALSE);
 				break;
 			case ACTION_NEWEST_NEW:
-				if (summaryview->sort_type == SORT_ASCENDING)
-					node = summary_find_prev_flagged_msg(summaryview, NULL,
+				if (prefs_common.ignore_sort_direction
+					&& item->sort_type == SORT_DESCENDING)
+					node = summary_find_next_flagged_msg(summaryview, NULL,
 					     MSG_NEW, FALSE);
 				else
-					node = summary_find_next_flagged_msg(summaryview, NULL,
+					node = summary_find_prev_flagged_msg(summaryview, NULL,
 					     MSG_NEW, FALSE);
 				break;
 			case ACTION_OLDEST_UNREAD:
-				if (summaryview->sort_type == SORT_ASCENDING)
-					node = summary_find_next_flagged_msg(summaryview, NULL,
+				if (prefs_common.ignore_sort_direction
+					&& item->sort_type == SORT_DESCENDING)
+					node = summary_find_prev_flagged_msg(summaryview, NULL,
 					     MSG_UNREAD, FALSE);
 				else
-					node = summary_find_prev_flagged_msg(summaryview, NULL,
+					node = summary_find_next_flagged_msg(summaryview, NULL,
 					     MSG_UNREAD, FALSE);
 				break;
 			case ACTION_NEWEST_UNREAD:
-				if (summaryview->sort_type == SORT_ASCENDING)
-					node = summary_find_prev_flagged_msg(summaryview, NULL,
+				if (prefs_common.ignore_sort_direction
+					&& item->sort_type == SORT_DESCENDING)
+					node = summary_find_next_flagged_msg(summaryview, NULL,
 					     MSG_UNREAD, FALSE);
 				else
-					node = summary_find_next_flagged_msg(summaryview, NULL,
+					node = summary_find_prev_flagged_msg(summaryview, NULL,
 					     MSG_UNREAD, FALSE);
 				break;
 			case ACTION_LAST_OPENED:
@@ -1578,7 +1586,8 @@ gboolean summary_show(SummaryView *summaryview, FolderItem *item)
 				if (GTK_CMCLIST(ctree)->row_list != NULL) {
 					node = gtk_cmctree_node_nth
 						(ctree,
-						 item->sort_type == SORT_DESCENDING
+						 prefs_common.ignore_sort_direction
+						 && item->sort_type == SORT_DESCENDING
 						 ? 0 : GTK_CMCLIST(ctree)->rows - 1);
 				}
 				break;
@@ -1586,8 +1595,9 @@ gboolean summary_show(SummaryView *summaryview, FolderItem *item)
 				if (GTK_CMCLIST(ctree)->row_list != NULL) {
 					node = gtk_cmctree_node_nth
 						(ctree,
-						 item->sort_type == SORT_ASCENDING
-						 ? 0 : GTK_CMCLIST(ctree)->rows - 1);
+						 prefs_common.ignore_sort_direction
+						 && item->sort_type == SORT_DESCENDING
+						 ? GTK_CMCLIST(ctree)->rows - 1 : 0);
 				}
 				break;
 			case ACTION_NOTHING:
@@ -1871,10 +1881,10 @@ void summary_select_prev(SummaryView *summaryview)
 	GtkCMCTreeNode *node = summaryview->selected;
 	GtkCMCTree *ctree = GTK_CMCTREE(summaryview->ctree);
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = gtkut_ctree_node_prev(ctree, node);
-	else
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
 		node = gtkut_ctree_node_next(ctree, node);
+	else
+		node = gtkut_ctree_node_prev(ctree, node);
 
 	if (node && node != summaryview->selected)
 		summary_select_node(summaryview, node, OPEN_SELECTED_ON_PREVNEXT);
@@ -1885,10 +1895,10 @@ void summary_select_next(SummaryView *summaryview)
 	GtkCMCTreeNode *node = summaryview->selected;
 	GtkCMCTree *ctree = GTK_CMCTREE(summaryview->ctree);
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = gtkut_ctree_node_next(ctree, node);
-	else
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
 		node = gtkut_ctree_node_prev(ctree, node);
+	else
+		node = gtkut_ctree_node_next(ctree, node);
 
 	if (node && node != summaryview->selected)
 		summary_select_node(summaryview, node, OPEN_SELECTED_ON_PREVNEXT);
@@ -1898,11 +1908,11 @@ void summary_select_prev_unread(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_prev_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_next_flagged_msg
 			(summaryview, summaryview->selected, MSG_UNREAD, TRUE);
 	else
-		node = summary_find_next_flagged_msg
+		node = summary_find_prev_flagged_msg
 			(summaryview, summaryview->selected, MSG_UNREAD, TRUE);
 
 	if (!node || node == summaryview->selected) {
@@ -1926,11 +1936,11 @@ void summary_select_prev_unread(SummaryView *summaryview)
  					_("Internal error: unexpected value for prefs_common.next_unread_msg_dialog\n"));
  		}
 		if (val != G_ALERTALTERNATE) return;
-		if (summaryview->sort_type == SORT_ASCENDING)
-			node = summary_find_prev_flagged_msg(summaryview, NULL,
+		if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+			node = summary_find_next_flagged_msg(summaryview, NULL,
 							     MSG_UNREAD, FALSE);
 		else
-			node = summary_find_next_flagged_msg(summaryview, NULL,
+			node = summary_find_prev_flagged_msg(summaryview, NULL,
 							     MSG_UNREAD, FALSE);
 	}
 
@@ -1944,11 +1954,11 @@ void summary_select_next_unread(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node = summaryview->selected;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_next_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_prev_flagged_msg
 			(summaryview, node, MSG_UNREAD, TRUE);
 	else
-		node = summary_find_prev_flagged_msg
+		node = summary_find_next_flagged_msg
 			(summaryview, node, MSG_UNREAD, TRUE);
 	
 	if (node)
@@ -1983,11 +1993,11 @@ void summary_select_prev_new(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_prev_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_next_flagged_msg
 			(summaryview, summaryview->selected, MSG_NEW, TRUE);
 	else
-		node = summary_find_next_flagged_msg
+		node = summary_find_prev_flagged_msg
 			(summaryview, summaryview->selected, MSG_NEW, TRUE);
 
 	if (!node || node == summaryview->selected) {
@@ -2011,11 +2021,11 @@ void summary_select_prev_new(SummaryView *summaryview)
  					_("Internal error: unexpected value for prefs_common.next_unread_msg_dialog\n"));
  		}
 		if (val != G_ALERTALTERNATE) return;
-		if (summaryview->sort_type == SORT_ASCENDING)
-			node = summary_find_prev_flagged_msg(summaryview, NULL,
+		if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+			node = summary_find_next_flagged_msg(summaryview, NULL,
 						     	     MSG_NEW, FALSE);
 		else
-			node = summary_find_next_flagged_msg(summaryview, NULL,
+			node = summary_find_prev_flagged_msg(summaryview, NULL,
 							     MSG_NEW, FALSE);
 	}
 
@@ -2029,11 +2039,11 @@ void summary_select_next_new(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node = summaryview->selected;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_next_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_prev_flagged_msg
 			(summaryview, node, MSG_NEW, TRUE);
 	else
-		node = summary_find_prev_flagged_msg
+		node = summary_find_next_flagged_msg
 			(summaryview, node, MSG_NEW, TRUE);
 	
 	if (node)
@@ -2067,11 +2077,11 @@ void summary_select_prev_marked(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_prev_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_next_flagged_msg
 			(summaryview, summaryview->selected, MSG_MARKED, TRUE);
 	else
-		node = summary_find_next_flagged_msg
+		node = summary_find_prev_flagged_msg
 			(summaryview, summaryview->selected, MSG_MARKED, TRUE);
 
 	if (!node) {
@@ -2096,11 +2106,11 @@ void summary_select_next_marked(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node = summaryview->selected;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_next_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_prev_flagged_msg
 			(summaryview, node, MSG_MARKED, TRUE);
 	else
-		node = summary_find_prev_flagged_msg
+		node = summary_find_next_flagged_msg
 			(summaryview, node, MSG_MARKED, TRUE);
 	
 	if (node)
@@ -2134,11 +2144,11 @@ void summary_select_prev_labeled(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_prev_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_next_flagged_msg
 			(summaryview, summaryview->selected, MSG_CLABEL_FLAG_MASK, TRUE);
 	else
-		node = summary_find_next_flagged_msg
+		node = summary_find_prev_flagged_msg
 			(summaryview, summaryview->selected, MSG_CLABEL_FLAG_MASK, TRUE);
 
 	if (!node) {
@@ -2163,11 +2173,11 @@ void summary_select_next_labeled(SummaryView *summaryview)
 {
 	GtkCMCTreeNode *node;
 
-	if (summaryview->sort_type == SORT_ASCENDING)
-		node = summary_find_next_flagged_msg
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+		node = summary_find_prev_flagged_msg
 			(summaryview, summaryview->selected, MSG_CLABEL_FLAG_MASK, TRUE);
 	else
-		node = summary_find_prev_flagged_msg
+		node = summary_find_next_flagged_msg
 			(summaryview, summaryview->selected, MSG_CLABEL_FLAG_MASK, TRUE);
 
 	if (!node) {
@@ -2178,11 +2188,11 @@ void summary_select_next_labeled(SummaryView *summaryview)
 				   "Search from the beginning?"),
 				 GTK_STOCK_NO, GTK_STOCK_YES, NULL, ALERTFOCUS_SECOND);
 		if (val != G_ALERTALTERNATE) return;
-		if (summaryview->sort_type == SORT_ASCENDING)
-			node = summary_find_next_flagged_msg(summaryview, NULL,
+		if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING)
+			node = summary_find_prev_flagged_msg(summaryview, NULL,
 						    	     MSG_CLABEL_FLAG_MASK, TRUE);
 		else
-			node = summary_find_prev_flagged_msg(summaryview, NULL,
+			node = summary_find_next_flagged_msg(summaryview, NULL,
 						    	     MSG_CLABEL_FLAG_MASK, TRUE);
 	}
 
@@ -4550,14 +4560,14 @@ void summary_delete(SummaryView *summaryview)
 	folder_item_set_batch(summaryview->folder_item, FALSE);
 	END_LONG_OPERATION(summaryview);
 
-	if (summaryview->sort_type == SORT_ASCENDING) {
-		node = summary_find_next_msg(summaryview, sel_last, TRUE);
+	if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING) {
+		node = summary_find_prev_msg(summaryview, sel_last, TRUE);
 		if (!node || prefs_common.next_on_delete == FALSE)
-			node = summary_find_prev_msg(summaryview, sel_last,TRUE);
+			node = summary_find_next_msg(summaryview, sel_last,TRUE);
 	} else {
-		node = summary_find_prev_msg(summaryview, sel_last,TRUE);
+		node = summary_find_next_msg(summaryview, sel_last,TRUE);
 		if (!node || prefs_common.next_on_delete == FALSE)
-			node = summary_find_next_msg(summaryview, sel_last,TRUE);
+			node = summary_find_prev_msg(summaryview, sel_last,TRUE);
 	}
 	summary_select_node(summaryview, node, OPEN_SELECTED_ON_DELETEMOVE);
 	
@@ -4707,14 +4717,14 @@ void summary_move_selected_to(SummaryView *summaryview, FolderItem *to_folder)
 		summary_execute(summaryview);
 	} else {
 		GtkCMCTreeNode *node = NULL;
-		if (summaryview->sort_type == SORT_ASCENDING) {
-			node = summary_find_next_msg(summaryview, sel_last,TRUE);
-			if (!node || prefs_common.next_on_delete == FALSE)
-				node = summary_find_prev_msg(summaryview, sel_last,TRUE);
-		} else {
+		if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING) {
 			node = summary_find_prev_msg(summaryview, sel_last,TRUE);
 			if (!node || prefs_common.next_on_delete == FALSE)
 				node = summary_find_next_msg(summaryview, sel_last,TRUE);
+		} else {
+			node = summary_find_next_msg(summaryview, sel_last,TRUE);
+			if (!node || prefs_common.next_on_delete == FALSE)
+				node = summary_find_prev_msg(summaryview, sel_last,TRUE);
 		}
 		summary_select_node(summaryview, node, OPEN_SELECTED_ON_DELETEMOVE);
 		summary_status_show(summaryview);
@@ -5102,14 +5112,14 @@ gboolean summary_execute(SummaryView *summaryview)
 		if (!new_selected &&
 		    gtkut_ctree_node_is_selected(ctree, node)) {
 			summary_unselect_all(summaryview);
-			if (summaryview->sort_type == SORT_ASCENDING) {
-				new_selected = summary_find_next_msg(summaryview, node,TRUE);
-				if (!new_selected || prefs_common.next_on_delete == FALSE)
-					new_selected = summary_find_prev_msg(summaryview, node,TRUE);
-			} else {
+			if (prefs_common.ignore_sort_direction && summaryview->sort_type == SORT_DESCENDING) {
 				new_selected = summary_find_prev_msg(summaryview, node,TRUE);
 				if (!new_selected || prefs_common.next_on_delete == FALSE)
 					new_selected = summary_find_next_msg(summaryview, node,TRUE);
+			} else {
+				new_selected = summary_find_next_msg(summaryview, node,TRUE);
+				if (!new_selected || prefs_common.next_on_delete == FALSE)
+					new_selected = summary_find_prev_msg(summaryview, node,TRUE);
 			}
 		}
 
-- 
2.15.1

